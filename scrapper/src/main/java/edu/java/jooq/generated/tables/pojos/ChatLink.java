/*
 * This file is generated by jOOQ.
 */
package edu.java.jooq.generated.tables.pojos;


import java.beans.ConstructorProperties;
import java.io.Serializable;
import java.time.OffsetDateTime;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ChatLink implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long chatId;
    private Long linkId;
    private OffsetDateTime sharedAt;

    public ChatLink() {}

    public ChatLink(ChatLink value) {
        this.chatId = value.chatId;
        this.linkId = value.linkId;
        this.sharedAt = value.sharedAt;
    }

    @ConstructorProperties({ "chatId", "linkId", "sharedAt" })
    public ChatLink(
        @NotNull Long chatId,
        @NotNull Long linkId,
        @NotNull OffsetDateTime sharedAt
    ) {
        this.chatId = chatId;
        this.linkId = linkId;
        this.sharedAt = sharedAt;
    }

    /**
     * Getter for <code>CHAT_LINK.CHAT_ID</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getChatId() {
        return this.chatId;
    }

    /**
     * Setter for <code>CHAT_LINK.CHAT_ID</code>.
     */
    public void setChatId(@NotNull Long chatId) {
        this.chatId = chatId;
    }

    /**
     * Getter for <code>CHAT_LINK.LINK_ID</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getLinkId() {
        return this.linkId;
    }

    /**
     * Setter for <code>CHAT_LINK.LINK_ID</code>.
     */
    public void setLinkId(@NotNull Long linkId) {
        this.linkId = linkId;
    }

    /**
     * Getter for <code>CHAT_LINK.SHARED_AT</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public OffsetDateTime getSharedAt() {
        return this.sharedAt;
    }

    /**
     * Setter for <code>CHAT_LINK.SHARED_AT</code>.
     */
    public void setSharedAt(@NotNull OffsetDateTime sharedAt) {
        this.sharedAt = sharedAt;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ChatLink other = (ChatLink) obj;
        if (this.chatId == null) {
            if (other.chatId != null)
                return false;
        }
        else if (!this.chatId.equals(other.chatId))
            return false;
        if (this.linkId == null) {
            if (other.linkId != null)
                return false;
        }
        else if (!this.linkId.equals(other.linkId))
            return false;
        if (this.sharedAt == null) {
            if (other.sharedAt != null)
                return false;
        }
        else if (!this.sharedAt.equals(other.sharedAt))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.chatId == null) ? 0 : this.chatId.hashCode());
        result = prime * result + ((this.linkId == null) ? 0 : this.linkId.hashCode());
        result = prime * result + ((this.sharedAt == null) ? 0 : this.sharedAt.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ChatLink (");

        sb.append(chatId);
        sb.append(", ").append(linkId);
        sb.append(", ").append(sharedAt);

        sb.append(")");
        return sb.toString();
    }
}
