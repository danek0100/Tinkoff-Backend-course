/*
 * This file is generated by jOOQ.
 */
package edu.java.jooq.generated.tables.records;


import edu.java.jooq.generated.tables.ChatLink;

import java.beans.ConstructorProperties;
import java.time.OffsetDateTime;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ChatLinkRecord extends UpdatableRecordImpl<ChatLinkRecord> implements Record3<Long, Long, OffsetDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>CHAT_LINK.CHAT_ID</code>.
     */
    public void setChatId(@NotNull Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>CHAT_LINK.CHAT_ID</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getChatId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>CHAT_LINK.LINK_ID</code>.
     */
    public void setLinkId(@NotNull Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>CHAT_LINK.LINK_ID</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getLinkId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>CHAT_LINK.SHARED_AT</code>.
     */
    public void setSharedAt(@NotNull OffsetDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>CHAT_LINK.SHARED_AT</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public OffsetDateTime getSharedAt() {
        return (OffsetDateTime) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row3<Long, Long, OffsetDateTime> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row3<Long, Long, OffsetDateTime> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<Long> field1() {
        return ChatLink.CHAT_LINK.CHAT_ID;
    }

    @Override
    @NotNull
    public Field<Long> field2() {
        return ChatLink.CHAT_LINK.LINK_ID;
    }

    @Override
    @NotNull
    public Field<OffsetDateTime> field3() {
        return ChatLink.CHAT_LINK.SHARED_AT;
    }

    @Override
    @NotNull
    public Long component1() {
        return getChatId();
    }

    @Override
    @NotNull
    public Long component2() {
        return getLinkId();
    }

    @Override
    @NotNull
    public OffsetDateTime component3() {
        return getSharedAt();
    }

    @Override
    @NotNull
    public Long value1() {
        return getChatId();
    }

    @Override
    @NotNull
    public Long value2() {
        return getLinkId();
    }

    @Override
    @NotNull
    public OffsetDateTime value3() {
        return getSharedAt();
    }

    @Override
    @NotNull
    public ChatLinkRecord value1(@NotNull Long value) {
        setChatId(value);
        return this;
    }

    @Override
    @NotNull
    public ChatLinkRecord value2(@NotNull Long value) {
        setLinkId(value);
        return this;
    }

    @Override
    @NotNull
    public ChatLinkRecord value3(@NotNull OffsetDateTime value) {
        setSharedAt(value);
        return this;
    }

    @Override
    @NotNull
    public ChatLinkRecord values(@NotNull Long value1, @NotNull Long value2, @NotNull OffsetDateTime value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ChatLinkRecord
     */
    public ChatLinkRecord() {
        super(ChatLink.CHAT_LINK);
    }

    /**
     * Create a detached, initialised ChatLinkRecord
     */
    @ConstructorProperties({ "chatId", "linkId", "sharedAt" })
    public ChatLinkRecord(@NotNull Long chatId, @NotNull Long linkId, @NotNull OffsetDateTime sharedAt) {
        super(ChatLink.CHAT_LINK);

        setChatId(chatId);
        setLinkId(linkId);
        setSharedAt(sharedAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ChatLinkRecord
     */
    public ChatLinkRecord(edu.java.jooq.generated.tables.pojos.ChatLink value) {
        super(ChatLink.CHAT_LINK);

        if (value != null) {
            setChatId(value.getChatId());
            setLinkId(value.getLinkId());
            setSharedAt(value.getSharedAt());
            resetChangedOnNotNull();
        }
    }
}
