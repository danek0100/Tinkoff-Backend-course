/*
 * This file is generated by jOOQ.
 */
package edu.java.jooq.generated.tables.pojos;


import jakarta.validation.constraints.Size;

import java.beans.ConstructorProperties;
import java.io.Serializable;
import java.time.OffsetDateTime;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Link implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long linkId;
    private String url;
    private String description;
    private OffsetDateTime createdAt;
    private OffsetDateTime lastCheckTime;
    private OffsetDateTime lastUpdateTime;

    public Link() {}

    public Link(Link value) {
        this.linkId = value.linkId;
        this.url = value.url;
        this.description = value.description;
        this.createdAt = value.createdAt;
        this.lastCheckTime = value.lastCheckTime;
        this.lastUpdateTime = value.lastUpdateTime;
    }

    @ConstructorProperties({ "linkId", "url", "description", "createdAt", "lastCheckTime", "lastUpdateTime" })
    public Link(
        @Nullable Long linkId,
        @NotNull String url,
        @Nullable String description,
        @NotNull OffsetDateTime createdAt,
        @Nullable OffsetDateTime lastCheckTime,
        @Nullable OffsetDateTime lastUpdateTime
    ) {
        this.linkId = linkId;
        this.url = url;
        this.description = description;
        this.createdAt = createdAt;
        this.lastCheckTime = lastCheckTime;
        this.lastUpdateTime = lastUpdateTime;
    }

    /**
     * Getter for <code>LINK.LINK_ID</code>.
     */
    @Nullable
    public Long getLinkId() {
        return this.linkId;
    }

    /**
     * Setter for <code>LINK.LINK_ID</code>.
     */
    public void setLinkId(@Nullable Long linkId) {
        this.linkId = linkId;
    }

    /**
     * Getter for <code>LINK.URL</code>.
     */
    @jakarta.validation.constraints.NotNull
    @Size(max = 1000000000)
    @NotNull
    public String getUrl() {
        return this.url;
    }

    /**
     * Setter for <code>LINK.URL</code>.
     */
    public void setUrl(@NotNull String url) {
        this.url = url;
    }

    /**
     * Getter for <code>LINK.DESCRIPTION</code>.
     */
    @Size(max = 1000000000)
    @Nullable
    public String getDescription() {
        return this.description;
    }

    /**
     * Setter for <code>LINK.DESCRIPTION</code>.
     */
    public void setDescription(@Nullable String description) {
        this.description = description;
    }

    /**
     * Getter for <code>LINK.CREATED_AT</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>LINK.CREATED_AT</code>.
     */
    public void setCreatedAt(@NotNull OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for <code>LINK.LAST_CHECK_TIME</code>.
     */
    @Nullable
    public OffsetDateTime getLastCheckTime() {
        return this.lastCheckTime;
    }

    /**
     * Setter for <code>LINK.LAST_CHECK_TIME</code>.
     */
    public void setLastCheckTime(@Nullable OffsetDateTime lastCheckTime) {
        this.lastCheckTime = lastCheckTime;
    }

    /**
     * Getter for <code>LINK.LAST_UPDATE_TIME</code>.
     */
    @Nullable
    public OffsetDateTime getLastUpdateTime() {
        return this.lastUpdateTime;
    }

    /**
     * Setter for <code>LINK.LAST_UPDATE_TIME</code>.
     */
    public void setLastUpdateTime(@Nullable OffsetDateTime lastUpdateTime) {
        this.lastUpdateTime = lastUpdateTime;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Link other = (Link) obj;
        if (this.linkId == null) {
            if (other.linkId != null)
                return false;
        }
        else if (!this.linkId.equals(other.linkId))
            return false;
        if (this.url == null) {
            if (other.url != null)
                return false;
        }
        else if (!this.url.equals(other.url))
            return false;
        if (this.description == null) {
            if (other.description != null)
                return false;
        }
        else if (!this.description.equals(other.description))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.lastCheckTime == null) {
            if (other.lastCheckTime != null)
                return false;
        }
        else if (!this.lastCheckTime.equals(other.lastCheckTime))
            return false;
        if (this.lastUpdateTime == null) {
            if (other.lastUpdateTime != null)
                return false;
        }
        else if (!this.lastUpdateTime.equals(other.lastUpdateTime))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.linkId == null) ? 0 : this.linkId.hashCode());
        result = prime * result + ((this.url == null) ? 0 : this.url.hashCode());
        result = prime * result + ((this.description == null) ? 0 : this.description.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.lastCheckTime == null) ? 0 : this.lastCheckTime.hashCode());
        result = prime * result + ((this.lastUpdateTime == null) ? 0 : this.lastUpdateTime.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Link (");

        sb.append(linkId);
        sb.append(", ").append(url);
        sb.append(", ").append(description);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(lastCheckTime);
        sb.append(", ").append(lastUpdateTime);

        sb.append(")");
        return sb.toString();
    }
}
