app:
  scheduler:
    enable: true
    interval: PT10S
    force-check-delay: PT10S
  database-access-type: jooq

bot:
  api:
    baseurl: http://localhost:8090

spring:
  application:
    name: scrapper
  datasource:
    url: jdbc:postgresql://localhost:5432/scrapper
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
  liquibase:
    enabled: false
  jpa:
    properties:
      hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:kafka:9092}
    consumer:
      group-id: ${SCRAPPER_GROUP_ID:update-group}
      auto-offset-reset: earliest
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

server:
  port: 8080

logging:
  config: classpath:log4j2-plain.xml

github:
  base:
    url: ${GITHUB_BASE_URL:https://api.github.com}

stackoverflow:
  base:
    url: ${STACKOVERFLOW_BASE_URL:https://api.stackexchange.com/2.2}

springdoc:
  swagger-ui:
    path: /swagger-ui

rate-limiting:
  capacity: 20
  tokens: 20
  refill-duration: 60

retry:
  max-attempts: 3
  first-backoff-seconds: 1
  max-backoff-seconds: 5
  retryable-status-codes: [500, 502, 503, 504]

kafka:
  topic: ${SCRAPPER_UPDATE_TOPIC:update-topic}
